class Solution {
public:
    vector<string> generateParenthesis(int n) {
        vector<vector<string>> dp(n+1);
        dp[0]={""};
        dp[1]={"()"};
        string t;
        for(int i=2;i<=n;i++){
            for(int j=0;j<i;j++){
                for(string &s1:dp[j])//遍历所有s1和s2的可能长度，保证j+i-1+j=i-1，留一个加一对新的括号
                    for(string &s2:dp[i-1-j]){
                        t='('+s1+')'+s2;//重点，每增加一个括号，只可能是这种方式增加
                        dp[i].push_back(t);
                    }
            }
        }   
        return dp[n];
    }
};
